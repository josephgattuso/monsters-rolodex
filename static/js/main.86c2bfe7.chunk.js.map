{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","App","state","fetch","then","response","json","users","setState","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAIaA,G,MAAO,SAAAC,GAAK,OACvB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCNTC,G,MAAW,SAAAR,GAAK,OAC3B,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCoBVM,G,wDAtBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXH,SAAU,IAHA,E,gEAOO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAET,SAAUQ,S,+BAI3C,OACE,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,CAAUQ,SAAUU,KAAKP,MAAMH,iB,GAjBrBW,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.86c2bfe7.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./card.styles.css\";\n\nexport const Card = props => (\n  <div className=\"card-container\">\n    <img\n      alt=\"monster\"\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n    />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n);\n","import React from \"react\";\nimport { Card } from \"../card/card.component\";\n\nimport \"./card-list.styles.css\";\n\nexport const CardList = props => (\n  <div className=\"card-list\">\n    {props.monsters.map(monster => (\n      <Card key={monster.id} monster={monster} />\n    ))}\n  </div>\n);\n","import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CardList monsters={this.state.monsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}